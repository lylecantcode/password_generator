{"ast":null,"code":"var _jsxFileName = \"/home/lyle/projects/password_generator/frontend/src/components/password_gen.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Snackbar } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GeneratePasswordDialog() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [length, setLength] = React.useState(\"\");\n  const [requestedPassword, setRequestedPassword] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const [password, setPassword] = React.useState(\"Loading...\");\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setRequestedPassword(false);\n    setError(false);\n    setLength(\"\");\n  };\n  const handleContinue = () => {\n    if (length > 7 && length < 65) {\n      // GET request for password\n      setPassword(\"jkljfweuttwoioiwejrweirjewo\");\n      setRequestedPassword(true);\n    } else {\n      setError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Password Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), !requestedPassword && /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please choose the length for your password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          type: \"number\",\n          label: \"Password Length\",\n          fullWidth: true,\n          value: length,\n          variant: \"standard\",\n          error: error,\n          helperText: !error ? \" \" : \"Should be between 8 and 64 characters\",\n          onChange: event => {\n            let value = parseInt(event.target.value);\n            if (event.target.value == \"\" || value < 65) setLength(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this), requestedPassword && /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Your suggested password is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Password\",\n            fullWidth: true,\n            value: password,\n            variant: \"standard\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboardButton, {\n            password: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), !requestedPassword && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleContinue,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(GeneratePasswordDialog, \"ZiL2ZK/CJbDHETx2MoX6rE2/Aj4=\");\n_c = GeneratePasswordDialog;\nconst CopyToClipboardButton = _ref => {\n  _s2();\n  let {\n    password\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const handleClick = () => {\n    setOpen(true);\n    navigator.clipboard.writeText(password);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      onClose: () => setOpen(false),\n      autoHideDuration: 2000,\n      message: \"Copied to clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s2(CopyToClipboardButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c2 = CopyToClipboardButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"GeneratePasswordDialog\");\n$RefreshReg$(_c2, \"CopyToClipboardButton\");","map":{"version":3,"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Snackbar","ContentCopyIcon","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","GeneratePasswordDialog","_s","open","setOpen","useState","length","setLength","requestedPassword","setRequestedPassword","error","setError","password","setPassword","handleClickOpen","handleClose","handleContinue","style","display","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","autoFocus","margin","id","type","label","fullWidth","value","helperText","onChange","event","parseInt","target","disabled","CopyToClipboardButton","_c","_ref","_s2","handleClick","navigator","clipboard","writeText","autoHideDuration","message","_c2","$RefreshReg$"],"sources":["/home/lyle/projects/password_generator/frontend/src/components/password_gen.tsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Snackbar } from '@mui/material'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Box from '@mui/material/Box';\n\n\nexport default function GeneratePasswordDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [length, setLength] = React.useState<number|string>(\"\");\n  const [requestedPassword, setRequestedPassword] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<boolean>(false);\n  const [password, setPassword] = React.useState<string>(\"Loading...\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setRequestedPassword(false);\n    setError(false);\n    setLength(\"\");\n  };\n  const handleContinue = () => {\n    if (length > 7 && length < 65) {\n      // GET request for password\n      setPassword(\"jkljfweuttwoioiwejrweirjewo\")\n      setRequestedPassword(true);\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <div style={{ display: 'inline' }}>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        New User\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Password Generation</DialogTitle>\n        {!requestedPassword && <DialogContent>\n          <DialogContentText>\n            Please choose the length for your password:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            type='number'\n            label=\"Password Length\"\n            fullWidth\n            value={length}\n            variant=\"standard\"\n            error={error}\n            helperText={!error? \" \":\"Should be between 8 and 64 characters\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              let value = parseInt(event.target.value)\n              if (event.target.value == \"\" || value < 65) setLength(value)}}\n          />\n        </DialogContent>}\n        {requestedPassword && <DialogContent>\n          <DialogContentText>\n            Your suggested password is:\n          </DialogContentText>\n          <Box display=\"flex\">\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Password\"\n              fullWidth\n              value={password}\n              variant=\"standard\"\n              disabled\n            />\n            <CopyToClipboardButton\n            password={password}/>\n          </Box>\n        </DialogContent>}\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          {!requestedPassword && <Button onClick={handleContinue}>Submit</Button>}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\ntype CopyProps = {\n  password :string;\n} \n\nconst CopyToClipboardButton = ({password}: CopyProps) => {\n    const [open, setOpen] = React.useState(false)\n    const handleClick = () => {\n      setOpen(true)\n      navigator.clipboard.writeText(password)\n    }\n    \n    return (\n        <>\n          <Button onClick={handleClick}><ContentCopyIcon/></Button>\n          <Snackbar\n            open={open}\n            onClose={() => setOpen(false)}\n            autoHideDuration={2000}\n            message=\"Copied to clipboard\"\n          />\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}